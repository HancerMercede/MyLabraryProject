@page "/books"
@inject IBook _service

<div class="container-fluid">
    <h1 class="card-title">
        Books
    </h1>   
    <Search  Books="SearchText" filter="@filter"/>
    <hr />
    @if (Books is null)
    {
        <p class="text-info">@message</p>
    }
    else
    {
        <div class="row">
        @foreach (var item in Books)
        { 
            <div class="col-sm-6 col-md-3 my-3">
                <div class="card shadow">
                    <div class="card-body">
                        <a href="https://es.z-lib.org/" target="_blank">
                          <img class="img-fluid" src="@item.Image" style="width:350px"/>
                        </a>
                    </div>
                    <div class="card-footer">
                        <div>
                            <p><strong>@item.Tematic</strong></p>
                        </div>
                        <div> 
                            <button  class=" btn btn-primary">
                                <i class="oi oi-bookmark"></i>
                                 Read
                            </button>
                            <button  class=" btn btn-success">
                                <i class="oi oi-pencil"></i>
                                 Edit Image
                            </button>
                            <button  class=" btn btn-danger">
                                <i class="oi oi-trash"></i>
                                 Delete
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        }
         </div>
    }
</div>

@code{

    IEnumerable<BookViewModel>? Books;

    string message = string.Empty;


    [Parameter] public string filter { get; set; } = string.Empty;
    [Parameter] public EventCallback SearchText { get; set; }
    protected override async Task OnInitializedAsync()
    {
        try
        {
            Books = await _service.GetAll();

        }
        catch (Exception ex)
        {
            message = string.Concat("Sorry something happens fetching the data: ", ex.Message);
        }
    }
}